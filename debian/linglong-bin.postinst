#!/bin/sh

# SPDX-FileCopyrightText: 2023 UnionTech Software Technology Co., Ltd.
#
# SPDX-License-Identifier: LGPL-3.0-or-later

# Handle upgrade from 1.3.x
# Move system level linglong repository from old location to /var/lib/linglong
upgrade_from_1_3_x() {
        version=$1
        shift

        if dpkg --compare-versions "$version" ge "1.4.0"; then
                return
        fi

        if [ -f /etc/X11/Xsession.d/21linglong ] &&
                [ "$(sha256sum /etc/X11/Xsession.d/21linglong)" = \
                        "5b82ac8e6b02cdae66294139e7db7cbe80af8cef6b0e2eddf8d509166afce544" ]; then
                rm /etc/X11/Xsession.d/21linglong
        fi

        if [ -d /var/lib/linglong ]; then
                echo "'/var/lib/linglong' directory exists."
                echo "Finish upgrading from 1.3.x without touch anything."
                return
        fi

        if [ ! -d /persistent/linglong ]; then
                echo "Old linglong repository not found."
                echo "Finish upgrading from 1.3.x without touch anything."
                return
        fi

        echo "Moving old deepin v23 linglong repository to new location..."
        mv /persistent/linglong /var/lib/linglong
        ln -s /var/lib/linglong /persistent/linglong # Quick fix for old files exported in old location.
        echo "Done"

        # This is good enough,
        # as linglong has only one repository publicly right now.
        echo "Removing old configuration file..."
        rm /var/lib/linglong/config.json -f
        echo "Done"
        return
}

case "$1" in
configure)
        upgrade_from_1_3_x "$2"
        ;;
abort-upgrade | abort-remove | abort-deconfigure) ;;
*)
        echo "postinst called with unknown argument '$1'" >&2
        exit 0
        ;;

esac

#DEBHELPER#
# Automatically added by dh_installsysusers/13.11.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
   systemd-sysusers ${DPKG_ROOT:+--root="$DPKG_ROOT"} linglong.conf
fi
# End automatically added section
# Automatically added by dh_installsystemduser/13.11.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -z "${DPKG_ROOT:-}" ] ; then
		# The following line should be removed in trixie or trixie+1
		deb-systemd-helper --user unmask 'linglong-upgrade.service' >/dev/null || true

		# was-enabled defaults to true, so new installations run enable.
		if deb-systemd-helper --quiet --user was-enabled 'linglong-upgrade.service' ; then
			# Enables the unit on first installation, creates new
			# symlinks on upgrades if the unit file has changed.
			deb-systemd-helper --user enable 'linglong-upgrade.service' >/dev/null || true
		else
			# Update the statefile to add new symlinks (if any), which need to be
			# cleaned up on purge. Also remove old symlinks.
			deb-systemd-helper --user update-state 'linglong-upgrade.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemduser/13.11.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -z "${DPKG_ROOT:-}" ] ; then
		# The following line should be removed in trixie or trixie+1
		deb-systemd-helper --user unmask 'linglong-upgrade.timer' >/dev/null || true

		# was-enabled defaults to true, so new installations run enable.
		if deb-systemd-helper --quiet --user was-enabled 'linglong-upgrade.timer' ; then
			# Enables the unit on first installation, creates new
			# symlinks on upgrades if the unit file has changed.
			deb-systemd-helper --user enable 'linglong-upgrade.timer' >/dev/null || true
		else
			# Update the statefile to add new symlinks (if any), which need to be
			# cleaned up on purge. Also remove old symlinks.
			deb-systemd-helper --user update-state 'linglong-upgrade.timer' >/dev/null || true
		fi
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/13.11.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# The following line should be removed in trixie or trixie+1
	deb-systemd-helper unmask 'org.deepin.linglong.PackageManager.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'org.deepin.linglong.PackageManager.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'org.deepin.linglong.PackageManager.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'org.deepin.linglong.PackageManager.service' >/dev/null || true
	fi
fi

# End automatically added section
# Automatically added by dh_installsystemd/13.11.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'org.deepin.linglong.PackageManager.service' >/dev/null || true
	fi
fi
# End automatically added section

exit 0

# vi: ft=sh
