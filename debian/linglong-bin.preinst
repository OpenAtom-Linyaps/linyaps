#!/bin/bash

# SPDX-FileCopyrightText: 2023 UnionTech Software Technology Co., Ltd.
# SPDX-License-Identifier: LGPL-3.0-or-later

log_file="/var/log/linglong-bin.log"  # Log file path

# Ensure log file exists
mkdir -p "$(dirname "$log_file")"
touch "$log_file"

# Handle upgrade from 1.3.x
# Move system level linglong repository from old location to /var/lib/linglong
upgrade_from_1_3_x() {
    old_version="$1"

    if dpkg --compare-versions "$old_version" ge "1.4.0"; then
        return
    fi

    echo "Upgrading from 1.3.x..." | tee -a "$log_file"

    if [ -f /etc/X11/Xsession.d/21linglong ] &&
       [ "$(sha256sum /etc/X11/Xsession.d/21linglong)" = \
               "5b82ac8e6b02cdae66294139e7db7cbe80af8cef6b0e2eddf8d509166afce544" ]; then
        rm /etc/X11/Xsession.d/21linglong
    fi

    old_repo="/persistent/linglong"
    new_repo="/var/lib/linglong"

    if [ -d "$new_repo" ]; then
        echo "'$new_repo' directory exists. Upgrade from 1.3.x already completed." | tee -a "$log_file"
        return
    elif [ ! -d "$old_repo" ]; then
        echo "Old linglong repository not found at '$old_repo'. Nothing to upgrade." | tee -a "$log_file"
        return
    fi

    echo "Moving old deepin v23 linglong repository from $old_repo to $new_repo..." | tee -a "$log_file"
    if ! mv "$old_repo" "$new_repo"; then
        echo "Error moving repository. Check permissions and disk space." | tee -a "$log_file"
        exit 1
    fi
    ln -s "$new_repo" "$old_repo"  # Quick fix for old files exported in old location.

    # Remove old config (good enough for now as linglong only has one public repo)
    echo "Removing old configuration file..." | tee -a "$log_file"
    rm -f "$new_repo/config.json" 
}

# Handle upgrade from 1.4.x
upgrade_from_1_4_x() {
    old_version="$1"

    if dpkg --compare-versions "$old_version" ge "1.5.0"; then
        return
    fi

    echo "Upgrading from 1.4.x..." | tee -a "$log_file"

    if [ ! -d "/var/lib/linglong/layers" ]; then
        echo "Old data not found. Nothing to upgrade." | tee -a "$log_file"
        return
    fi

    echo "Backing up old data..." | tee -a "$log_file"
    old_package_list="/var/lib/linglong/old-package.list"
    ls /var/lib/linglong/layers | grep -v "org.deepin.Runtime" > "$old_package_list"
    old_data=$(mktemp --tmpdir=/var/lib/linglong -d old-data-XXXXXXXX)
    mv /var/lib/linglong/layers "$old_data"
    mv /var/lib/linglong/entries "$old_data"
    # chmod is for linglong-repair-tool.desktop (TryExec=$oldPackageList).
    chmod +x "$old_package_list"
    chown deepin-linglong:deepin-linglong "$old_package_list"
    chown -R deepin-linglong:deepin-linglong "$old_data"
}

case "$1" in
    upgrade)
        upgrade_from_1_3_x "$2"
        upgrade_from_1_4_x "$2"
        ;;
    abort-upgrade | abort-remove | abort-deconfigure) 
        ;;
    *)
        echo "postinst called with unknown argument '$1'" >&2 | tee -a "$log_file"
        exit 0
        ;;
esac

exit 0
