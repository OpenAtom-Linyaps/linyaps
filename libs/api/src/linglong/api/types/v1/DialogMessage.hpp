// This file is generated by tools/codegen.sh
// DO NOT EDIT IT.

// clang-format off

//  To parse this JSON data, first install
//
//      json.hpp  https://github.com/nlohmann/json
//
//  Then include this file, and then do
//
//     DialogMessage.hpp data = nlohmann::json::parse(jsonString);

#pragma once

#include <optional>
#include <nlohmann/json.hpp>
#include "linglong/api/types/v1/helper.hpp"

namespace linglong {
namespace api {
namespace types {
namespace v1 {
/**
* For interactive with frontend dialog. All message exchange between dialog and
* caller should use stdin and stdout. The first four bytes indicate the length
* of the message. The rest of the payload is the actual payload.
*/

using nlohmann::json;

/**
* For interactive with frontend dialog. All message exchange between dialog and
* caller should use stdin and stdout. The first four bytes indicate the length
* of the message. The rest of the payload is the actual payload.
*/
struct DialogMessage {
/**
* payload of dialog message, the real payload depends on type
*/
std::string payload;
/**
* type of dialog message, possible values are ['Handshake', 'Request']
*/
std::string type;
};
}
}
}
}

// clang-format on
